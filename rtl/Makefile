################################################################################
##
## Filename: 	rtl/Makefile
## {{{
## Project:	AXI DMA Check: A utility to measure AXI DMA speeds
##
## Purpose:	This Makefile guides the translation of the project RTL files
##		into a library (Vmain__ALL.a) file that can then be linked
##	with our C++ test-bench driver routine.
##
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2020-2021, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
## }}}
# all, the first target, becomes the default target
all:
#
# Make sure we delete any partial products in case anything goes wrong
.DELETE_ON_ERROR:
#
# Verilator defines
## {{{
# Verilator places everything into obj_dir by default.  By creating a variable
# with this name, we can adjust it and everything will adjust as appropriate
VDIRFB  := obj_dir
#
#
# In case you have verilator in a strange place that's not necessarily in your
# path, we allow it to be overridden here.
VERILATOR := verilator
#
# Verilator flags
#	-Wall	Turn all warnings on, and stop on a warning as if an error
#	--MMD	Build/update a dependency file, so we know when we need to
#		rebuild
#	-trace	Build a VCD generation facility into Verilator's output
#	-y <dir> Let verilator know that some of our source is in the <dir>
#		directory
#	--Mdir <dir>	Place our output files into <dir>, or $(VDIRFB) here
#	--coverage	Generate coverage measures
#	-cc	Create C++ output files (in $(VDIRFB)
#
VFLAGS= -Wall --MMD -trace -Wno-TIMESCALEMOD $(AUTOVDIRS) -y ../wb2axip/rtl --Mdir $(VDIRFB) --coverage -cc
## }}}

#
# Now that all of our defines are out of the way, we'll specify two default
# targets.  The first just runs verilator.  The second actually builds our
# library within the $(VDIRFB) directory
.PHONY: all
all: verilate library design.h


# Run Verilator
## {{{
# The "verilate" target doesn't produce any files.  Just insist instead
# that the Vmain.h file exist
.PHONY: verilate
verilate: $(VDIRFB)/Vmain.h

#
# Run Verilator on our RTL code
$(VDIRFB)/Vmain.h:
	$(VERILATOR) $(VFLAGS) main.v
## }}}

#
# The actual call will need to look like $(SUBMAKE) <directory> <target>
SUBMAKE := $(MAKE) --no-print-directory -C


#
# Build the library from the Verialtor outputs.
# This just runs make in the $(VDIRFB) directory on the file Vmain.mk
# (also in the $(VDIRFB) directory)
.PHONY: library
library: $(VDIRFB)/Vmain.h
	$(SUBMAKE) $(VDIRFB)/ -f Vmain.mk

## design.h
## {{{
design.h: main.v builddate.v
	@echo "Building design.h"
	@echo "// " > $@
	@echo "// Do not edit this file, it is automatically generated!" >> $@
	@echo "// To generate this file, \"make design.h\" in the rtl directory." >> $@
	@echo "// " >> $@
	@echo "#ifndef DESIGN_H" >> $@
	@echo "#define DESIGN_H" >> $@
	@echo >> $@
	@grep "^\`" $< | grep -v default_nettype		\
		| grep -v include				\
		| grep -v timescale				\
		| sed -e '{ s/^`/#/ }'				\
		| sed -e ' s/^#elsif/#elif/'			\
		| sed -e ' s/main.v/design.h/' >> $@
	@echo >> $@
	@grep "^\`" builddate.v | sed -e '{ s/^`/#/ }'	\
		| sed -e ' s/32.h/0x/' >> $@
	@echo >> $@
	@echo "#endif // DESIGN_H" >> $@
## }}}

.PHONY: clean
## {{{
# Clean up any make by products, so we can start from scratch if we need to
clean:
	rm -rf $(VDIRFB)/
## }}}

# Dependency handling
## {{{
# Note and incorporate any dependency information, so that we'll know when/if
# we need to rebuild.
DEPS := $(wildcard $(VDIRFB)/*.d)

ifneq ($(DEPS),)
include $(DEPS)
endif
include make.inc
## }}}
