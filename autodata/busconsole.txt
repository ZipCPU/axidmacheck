################################################################################
##
## Filename: 	axiconsole.txt
## {{{
## Project:	AutoFPGA, a utility for composing FPGA designs from peripherals
##
## Purpose:	Provide access to both a debugging bus and a console port for
##		the CPU.  The debugging bus will be given 7-bit transfer codes
##	with the high bit set, the console the same codes but with bit 8 clear.
##
##	This particular version of the console uses the wbu (wishbone to UART)
##	debugging bus protocol in spite of the fact that the implementation is
##	native AXI (and AXI-lite).
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
## }}}
## Copyright (C) 2017-2021, Gisselquist Technology, LLC
## {{{
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
## }}}
## License:	GPL, v3, as defined and found on www.gnu.org,
## {{{
##		http://www.gnu.org/licenses/gpl.html
##
################################################################################
##
## }}}
@PREFIX=wbu
@DEVID=DBGBUS
@ACCESS=WBUBUS_MASTER
@MASTER.BUS=wbu
@MASTER.TYPE=HOST
@MASTER.PREFIX=@$(PREFIX)
@BUS.NAME=wbu
@BUS.CLOCK=clk
@BUS.WIDTH=32
@BUS.TYPE=axi
@BUS.IDWIDTH=2
@BUS.RESET=!i_reset
@$BAUDRATE=1000000
@CLOCK.NAME=clk
@$SETUP=@$(CLOCK.FREQUENCY) / @$BAUDRATE
@SETUP.FORMAT=24'h%x
@$BUS_ADDRESS_WIDTH=@$(MASTER.BUS.AWID)
@MAIN.PORTLIST=
		// UART/host to wishbone interface
		i_@$(PREFIX)_uart_rx, o_@$(PREFIX)_uart_tx
@MAIN.IODECL=
	input	wire		i_@$(PREFIX)_uart_rx;
	output	wire		o_@$(PREFIX)_uart_tx;
@MAIN.PARAM=
	//
	// (AXI) WBUBUS parameters
	// {{{
	// Baudrate : @$[%9d](BAUDRATE)
	// Clock    : @$[%9d](CLOCK.FREQUENCY)
	localparam [23:0] BUSUART = @$SETUP;	// @$[%9d](BAUDRATE) baud
	localparam	@$(DEVID)BITS = $clog2(BUSUART);
	// }}}
@MAIN.DEFNS=
	//
	// CONSOLE interface
	// {{{
	//
	wire	[7:0]	@$(PREFIX)_rx_data, @$(PREFIX)_tx_data;
	wire		@$(PREFIX)_rx_stb;
	wire		@$(PREFIX)_tx_stb, @$(PREFIX)_tx_busy;

	wire	w_ck_uart, w_uart_tx;
	// }}}
@MAIN.INSERT=
	// Debug bus / console serial port modules
	// {{{
	// The Host USB interface, to be used by the WB-UART bus
	rxuartlite #(
		// {{{
		.TIMER_BITS(@$(DEVID)BITS),
		.CLOCKS_PER_BAUD(BUSUART[@$(DEVID)BITS-1:0])
		// }}}
	) rcv(
		// {{{
		@$(CLOCK.WIRE), i_@$(PREFIX)_uart_rx,
		@$(PREFIX)_rx_stb, @$(PREFIX)_rx_data
		// }}}
	);

	txuartlite #(
		// {{{
		.TIMING_BITS(@$(DEVID)BITS[4:0]),
				.CLOCKS_PER_BAUD(BUSUART[@$(DEVID)BITS-1:0])
		// }}}
	) txv(
		// {{{
		@$(CLOCK.WIRE),
		@$(PREFIX)_tx_stb,
		@$(PREFIX)_tx_data,
		o_@$(PREFIX)_uart_tx,
		@$(PREFIX)_tx_busy
		// }}}
	);
	// }}}
`ifndef	BUSPIC_ACCESS
	wire	w_bus_int;
	assign	w_bus_int = 1'b0;
`endif
	axiuartbus #(
		// {{{
		.C_AXI_ID_WIDTH(@$(BUS.IDWIDTH)),
		.C_AXI_ADDR_WIDTH(@$(BUS.AWID)),
		.C_AXI_DATA_WIDTH(@$(BUS.WIDTH))
		// }}}
	) genbus(
		// {{{
		@$(CLOCK.WIRE), @$(MASTER.BUS.RESET),
		@$(PREFIX)_rx_stb, @$(PREFIX)_rx_data,
		@$(MASTER.PORTLIST),
		w_bus_int,
		@$(PREFIX)_tx_stb, @$(PREFIX)_tx_data, @$(PREFIX)_tx_busy,
		//
		w_console_tx_stb, w_console_tx_data, w_console_busy,
		w_console_rx_stb, w_console_rx_data
		// }}}
	);

@REGDEFS.H.DEFNS=
#define	BAUDRATE	@$[%d](BAUDRATE)
@RTL.MAKE.GROUP= WBUBUS
@RTL.MAKE.SUBD=wbubus
@RTL.MAKE.FILES= axilconsole.v wbufifo.v wbucompactlines.v wbucompress.v
	wbudecompress.v wbudeword.v wbuexecaxi.v wbuidleint.v wbuinput.v
	wbuoutput.v wbureadcw.v wbusixchar.v wbutohex.v wbconsole.v axiuartbus.v
@SIM.INCLUDE=
#include "dbluartsim.h"
@SIM.CLOCK=@$(CLOCK.NAME)
@SIM.DEFNS=
	DBLUARTSIM	*m_@$(PREFIX);
@SIM.INIT=
		m_@$(PREFIX) = new DBLUARTSIM();
		m_@$(PREFIX)->setup(@$[%d](SETUP));
@SIM.TICK=
		m_core->i_@$(PREFIX)_uart_rx = (*m_@$(PREFIX))(m_core->o_@$(PREFIX)_uart_tx);
##
##
@PREFIX=uart
@NADDR=	4
@SLAVE.TYPE=OTHER
@SLAVE.BUS=axil
@ACCESS= BUSCONSOLE_ACCESS
@INT.UARTRX.WIRE=uartrx_int
@INT.UARTTX.WIRE=uarttx_int
@INT.UARTRXF.WIRE=uartrxf_int
@INT.UARTTXF.WIRE=uarttxf_int
@INT.UARTRX.PIC=altpic
@INT.UARTTX.PIC=altpic
@INT.UARTRXF.PIC=syspic
@INT.UARTTXF.PIC=syspic
@MAIN.DEFNS=
	// Console definitions
	wire		w_console_rx_stb, w_console_tx_stb, w_console_busy;
	wire	[6:0]	w_console_rx_data, w_console_tx_data;
@MAIN.INSERT=
	axilconsole #(
		// {{{
		.LGFLEN(6)
		// }}}
	) console(
		// {{{
		.S_AXI_ACLK(@$(SLAVE.BUS.CLOCK.WIRE)),
		.S_AXI_ARESETN(@$(SLAVE.BUS.RESET)),
		@$(SLAVE.ANSIPORTLIST),
		.o_uart_stb(w_console_tx_stb),
			.o_uart_data(w_console_tx_data),
			.i_uart_busy(w_console_busy),
		.i_uart_stb(w_console_rx_stb),
			.i_uart_data(w_console_rx_data),
		.o_uart_rx_int(uartrx_int),
			.o_uart_tx_int(uarttx_int),
			.o_uart_rxfifo_int(uartrxf_int),
			.o_uart_txfifo_int(uarttxf_int)
		// }}}
	);
@REGS.NOTE = // CONSOLE registers
@REGS.N = 3
## This is unused @REGS.0 = 0 R_CONSOLE_SETUP	 USETUP
@REGS.0 = 1 R_CONSOLE_FIFO	 UFIFO
@REGS.1 = 2 R_CONSOLE_UARTRX	 RX
@REGS.2 = 3 R_CONSOLE_UARTTX	 TX

@BDEF.DEFN =
typedef struct  CONSOLE_S {
	unsigned	u_setup;
	unsigned	u_fifo;
	unsigned	u_rx, u_tx;
} CONSOLE;

#define	_@$(PREFIX)_txbusy	((_uart->u_fifo & 0x10000)==0)
#define	_@$(PREFIX)_txidle	((_uart->u_tx   & 0x100)  ==0)
@BDEF.IONAME= io_console
@BDEF.IOTYPE= CONSOLE
@BDEF.OSDEF=	_BOARD_HAS_BUSCONSOLE
@BDEF.OSVAL=static volatile CONSOLE *const _@$(PREFIX) = ((CONSOLE *)@$[0x%08x](REGBASE));
@RTL.MAKE.GROUP= CONSOLE
@RTL.MAKE.SUBD=wbuart
@RTL.MAKE.FILES= txuartlite.v rxuartlite.v ufifo.v
